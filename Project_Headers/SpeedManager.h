/*! **********************************************************************************************
 * 2016  ITESM Campus Guadalajara. Laboratorio de Microcontroladores
 *
 * @file:      SpeedManager.h
 * @author(s):    Manuel Madrigal Valenzuela; Efraín Duarte López    
 *
 * @brief (User's Manual):
 *    This manager is used to control and consult the speed of a stepper motor
 *    
 *    This manager has been tested on the following NXP MCUs:
 *     + MC9S08QG8
 **************************************************************************************************/

#ifndef SPEEDMANAGER_H_
#define SPEEDMANAGER_H_



/*************************************************************************************************/
/*********************                 Includes                **********************/
/*************************************************************************************************/
#include "derivative.h" /* include peripheral declarations */
#include "types.h"

/*************************************************************************************************/
/*********************                 Defines                    **********************/
/*************************************************************************************************/

/* Driver configuration. The user should modify these values */
#define NUMBER_OF_STEPS    96
#define INITIAL_SPEED_DELAY_US   52000

/*************************************************************************************************/
/*********************                 Typedefs                **********************/
/*************************************************************************************************/

/*************************************************************************************************/
/*********************            Functions Like Macros              **********************/
/*************************************************************************************************/

/*************************************************************************************************/
/*********************              Extern Variables              **********************/
/*************************************************************************************************/

/*************************************************************************************************/
/*********************                  Extern Constants                    **********************/
/*************************************************************************************************/

/*************************************************************************************************/
/*********************              Function Prototypes              **********************/
/*************************************************************************************************/

/*!*-----------------------------------------------------------------------------------------------
* \name     SpeedManager_Init
* \brief    It initializes the manager to an initial speed given from INITIAL_SPEED_DELAY_US
* \param    void
* \return   void
-------------------------------------------------------------------------------------------------*/
void SpeedManager_Init(void);

/*!*-----------------------------------------------------------------------------------------------
* \name     SpeedManager_getSpeed
* \brief    It returns the delay between steps of the motor (in uS)
* \param    bool
* \return   u16
-------------------------------------------------------------------------------------------------*/
u32 SpeedManager_getSpeedDelay(void);

/*!*-----------------------------------------------------------------------------------------------
* \name     SpeedManager_setSpeed
* \brief    It receives the speed in RPS and translate it to the time delay needed between steps of the
*           motor to accomplish that speed.
*           The RPS are received scaled by 10 to take into account the decimal fraction. For example:
*           for a speed of 15.1 RPS, the parameter should be 151.
* \param    u16
* \return   void
-------------------------------------------------------------------------------------------------*/
void SpeedManager_setSpeed(u16);

/*************************************************************************************************/


#endif /* SPEEDMANAGER_H_ */
