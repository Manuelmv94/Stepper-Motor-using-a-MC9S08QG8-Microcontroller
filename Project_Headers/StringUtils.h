/*! **********************************************************************************************
 * 2016  ITESM Campus Guadalajara. Laboratorio de Microcontroladores
 *
 * @file:      StringUtils.h
 * @author(s):    Manuel Madrigal Valenzuela; Efraín Duarte López    
 *
 * @brief (User's Manual):
 *    This C file helps to do some operations with Strings(arrays of chars) such as comparisons and
 *    translations String to Number and Number to String
 *    
 **************************************************************************************************/


#ifndef STRINGUTILS_H_
#define STRINGUTILS_H_



/*************************************************************************************************/
/*********************                 Includes                **********************/
/*************************************************************************************************/
#include "derivative.h" /* include peripheral declarations */
#include "types.h"

/*************************************************************************************************/
/*********************                 Defines                    **********************/
/*************************************************************************************************/

/*************************************************************************************************/
/*********************                 Typedefs                **********************/
/*************************************************************************************************/

/*************************************************************************************************/
/*********************            Functions Like Macros              **********************/
/*************************************************************************************************/

/*************************************************************************************************/
/*********************              Extern Variables              **********************/
/*************************************************************************************************/

/*************************************************************************************************/
/*********************                  Extern Constants                    **********************/
/*************************************************************************************************/

/*************************************************************************************************/
/*********************              Function Prototypes              **********************/
/*************************************************************************************************/

/*!*-----------------------------------------------------------------------------------------------
* \name     StringUtils_StringCompare
* \brief    Returns TRUE if the strings(arrays of chars) are the same, and false otherwise.
* \param    char[], char[], u8
* \return   bool
-------------------------------------------------------------------------------------------------*/
bool StringUtils_StringCompare(const unsigned char[],const unsigned char[], u8);

/*!*-----------------------------------------------------------------------------------------------
* \name     StringUtils_Str2Num
* \brief    It translate the char representation of a number to an actual number. It returns true if 
*           the translation was accomplished and false otherwise.
*           If the translation was accomplished, the translation is saved to the u16* pointer passed 
*           as parameter
* \param    char[],u8,u8,u16*
* \return   bool
-------------------------------------------------------------------------------------------------*/
bool StringUtils_Str2Num(char[], u8, u8, u16*);

/*!*-----------------------------------------------------------------------------------------------
* \name     StringUtils_Num2Str
* \brief    It translate a number to its char representation. The resulting string is saved to the
*           char array passed in the parameters
* \param    u16,u8,u8,char[]
* \return   bool
-------------------------------------------------------------------------------------------------*/
void StringUtils_Num2Str(u16, u8, u8, char[]);

/*!*-----------------------------------------------------------------------------------------------
* \name     StringUtils_StringCopy
* \brief    It copies an amount of characters from one string to the other
* \param    unsigned char[],unsigned char[],u8
* \return   void
-------------------------------------------------------------------------------------------------*/
void StringUtils_StringCopy(unsigned char[],unsigned char[], u8);

/*************************************************************************************************/


#endif /* STRINGUTILS_H_ */
